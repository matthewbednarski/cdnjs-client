{
  "name": "Cdnjs-Client",
  "tagline": "a client for cdnjs's api and for GET'able resources. ",
  "body": "\r\n# Cdnjs Client\r\n\r\n**cdnjs** is a substitute for [bower](http://bower.io/)/npm in a [node](https://nodejs.org/en/) free environment. It depends on [bash](https://www.gnu.org/software/bash/), [jq](https://stedolan.github.io/jq/) and [curl](http://curl.haxx.se/).\r\n\r\nIt is mainly a client for [cdnjs](https://cdnjs.com/)/[cdnjs API](https://github.com/cdnjs/cdnjs#api) but it can handle any `GET`'able, publicly-available resources; [gists](https://gist.github.com) in particular . \r\n\r\n\r\n## Commands\r\n\r\n### Usage\r\n\r\nTo print the script's usage:\r\n\r\n```sh\r\n$ cdnjs --help\r\n```\r\nWhich gives the following output:\r\n\r\n```\r\n$ cdnjs --help\r\nUsage: cdnjs [OPTIONS] [ARGS]:\r\n\r\n    Options:\r\n    --init, init                     initialize a config file\r\n    --conf [CONFIG FILE]             use a custom config file\r\n    --list, list   [/to/exclude]     prints a list of link and script tags\r\n    --index, index [/to/exclude]     same as \"--list\"\r\n    --html, html   [/to/exclude]     same as \"--list\"\r\n\r\n    --nodev, nodev                   excludes non '.min.*' files; a flag for \\\"--list\\\"\r\n    --dev, dev                       excludes '.min.*' files; a flag for \\\"--list\\\"\r\n\r\n    -f, --find, find [ARGS]          perform query on api.cdnjs.com\r\n        --search, search [ARGS]      same as \"--search [ARGS]\"\r\n    -c, --clean, clean [ARGS]        clean configured relative-location\r\n    -s, --sync, sync [ARGS]          asynchronously download configured resources\r\n        --update, update [ARGS]      same as \"--sync [ARGS]\"\r\n    -a, + [LIB[+VERSION]] [GROUP]    add library with optional version to optional\r\n        --add, add                    group\r\n    -i, --install, install [LIB]     same as \"add\" plus \"sync\"\r\n    -d, --delete, delete [LIB]       removes library from configuration\r\n    --remove, remove [LIB]           same as \"delete\"\r\n\r\n    -v, --verbose, verbose           print debug/verbose output\r\n        --debug, debug               same as \"--verbose\"\r\n        --nocolor, nocolor           don't echo in color, useful for logging stdout/stderr\r\n    -h, -?, --help, help             print usage\r\n```\r\n\r\n\r\n### Init\r\n\r\nTo initialize a cdnjs configuration file at the default location `$(pwd)/.cdnjs`:\r\n\r\n```sh\r\n$ cdnjs init\r\n```\r\n\r\nTo specify another location to initialize:\r\n\r\n```sh\r\n$ cdnjs --conf .another-cdnjs.conf init\r\n```\r\n\r\nTo initialize a non-default configuration file in another directory: \r\n\r\n```sh\r\n$ cdnjs --conf ~/dir/to/create/.cdnjs init\r\n```\r\nNB. if the `path` of the file doesn't exist the script will attempt to create it.\r\n\r\n\r\n### Search/Find\r\n\r\nRequires a parameter `\"search string\"`.\r\n\r\nTo search for libraries containing `jquery`:\r\n\r\n```sh\r\n$ cdnjs search jquery\r\n```\r\n\r\n### Add\r\n\r\nThis command requires a parameter `library` with an optional suffix `+version`.\r\n\r\nTo add the latest version of `jquery` to your configuration:\r\n\r\n```sh\r\n$ cdnjs add jquery\r\n```\r\nTo add a specific version of `jquery` to your configuration use the syntax `library[+version]`\r\n\r\n```sh\r\n$ cdnjs add jquery+1.9.0\r\n```\r\n\r\n### Clean\r\n\r\nTo clean all the paths indicated by the configuration's `relative-location`:\r\n\r\n```sh\r\n$ cdnjs clean\r\n```\r\n\r\n### Sync/Update\r\n\r\nTo download the resources indicated by the current configuration:\r\n\r\n```sh\r\n$ cdnjs sync \r\n```\r\nNB. the resources will be downloaded to a *tmp* directory and then moved to the configuration's `relative-location`'s.\r\n\r\n### Install\r\n\r\nPerforms the `--add` and `--sync` commands:\r\n\r\n```sh\r\n$ cdnjs install jquery\r\n# \r\n# same as\r\n# \r\n$ cdnjs sync add jquery\r\n```\r\n\r\n### Delete/Remove\r\n\r\nRemoves the indicated library from the configuration and filesystem:\r\n\r\n```sh\r\n$ cdnjs remove jquery\r\n#\r\n# or\r\n# \r\n$ cdnjs --delete jquery\r\n```\r\n\r\n## Flags\r\n\r\nThere are a few *flags* for modifying output or functionality.\r\n\r\nSome are *general* and can be used with any command, such as `--conf`, `--debug` or `--nocolor`.\r\n\r\nOthers can be used only with *specific* commands, such as the `list` command's `--dev` and `--nodev` flags.\r\n\r\n### Conf\r\n\r\nAny command that requires the use of a configuration file can use the *flag* `--conf` to indicate an alternate file.\r\n\r\nThe commands which require a configuration file are `--init`, `--add`, `--clean` and `--sync`.\r\n\r\nThe default configuration file, if `--conf` is not specified, is `.cdnjs` in the current working directory.\r\n\r\nTo initialize a non-default configuration file in the current working directory:\r\n\r\n```sh\r\n$ cdnjs --conf .another-cdnjs.conf init\r\n```\r\n\r\nTo add `jquery` version `2.1.4` to a non-default configuration:\r\n\r\n```sh\r\n$ cdnjs --conf .another-cdnjs.conf --add jquery+2.1.4\r\n```\r\n\r\n### Debug/Verbose\r\n\r\nTo output `debug` messages add the `-v` flag to any command:\r\n\r\n```sh\r\n$ cdnjs sync -v\r\n# or\r\n$ cdnjs clean --verbose\r\n# or\r\n$ cdnjs clean --debug\r\n# or\r\n$ cdnjs clean verbose\r\n# or\r\n$ cdnjs clean debug\r\n```\r\n\r\n### No Color\r\n\r\nTo not output *color* escape codes add the `nocolor` flag.  This is helpful when you want to log `stdout/stderr` to file.\r\n\r\n```sh\r\n$cdnjs sync nocolor\r\n```\r\n\r\n\r\n### Dev\r\n\r\nA flag for the `--list` command, it excludes any `min.js` or `min.css` from its output.\r\n\r\n```sh\r\n$ cdnjs list --dev\r\n```\r\n\r\n### No-Dev\r\n\r\nA flag for the `--list` command, it excludes any library not ending in `min.js` or `min.css` from its output.\r\n\r\n```sh\r\n$ cdnjs list --nodev\r\n# or\r\n$ cdnjs list nodev\r\n```\r\n\r\n\r\n## Configuration example:\r\n\r\nAn example configuration file is found in this repository at [example/.cdnjs](https://raw.githubusercontent.com/matthewbednarski/cdnjs-client/master/example/.cdnjs).\r\n\r\nA file `.cdnjs` in the `pwd` or passed to the program through the `--conf [conf-file]` option.\r\n\r\n## Setup\r\n\r\n`cdnjs` depends on `bash`, `jq`, `curl` and `mktemp`.  If those dependencies are met and and `cdnjs` is on your `$PATH` everything should be fine.\r\n\r\n\r\n## Windows Setup\r\n\r\nSince `cdnjs` is a `bash` script it will work in a bash environment such as [Git for Windows](https://git-for-windows.github.io/), however it requires `jq` and `mktemp` ( not found in `Git for Windows` pre version `1.9.5`).\r\n\r\n### Download Jq\r\n\r\n[Download the `jq` binary](https://stedolan.github.io/jq/download/) and rename it to `jq.exe`. Place it in a folder known to be on your `$PATH`, eg. if you are using `Git for Windows` version `2.6.1` you will have `%PROGRAMFILES%\\Git\\usr\\bin` in which you can place the `jq.exe` binary.\r\n\r\n### Download cdnjs\r\n\r\nDownload the [latest version of cdnjs](https://raw.githubusercontent.com/matthewbednarski/cdnjs/master/cdnjs). Save it to a folder on you `$PATH` and make it executable.\r\n\r\n### Windows Setup Example Steps:\r\n\r\n1. Edit `.bashrc`:\r\n\r\n```sh\r\n...\r\nif [ -d \"~/bin\" ]; then\r\n  export PATH=$PATH:~/bin\r\nfi\r\n...\r\n```\r\n\r\n2. Then perform the following commands:\r\n\r\n```sh\r\nif [ ! -d \"~/bin\" ]; then mkdir \"~/bin\"; fi\r\ncd ~/bin\r\nwget https://raw.githubusercontent.com/matthewbednarski/cdnjs/master/cdnjs\r\nchmod +x cdnjs\r\nwget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-win64.exe\r\nmv jq-win64.exe jq.exe\r\nchmod +x jq.exe\r\nls -al\r\n```\r\n\r\n## Todo\r\n\r\n + allow partial `clean`'s and `sync`'s by section key (ie `cdnjs` or `gists` )\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}